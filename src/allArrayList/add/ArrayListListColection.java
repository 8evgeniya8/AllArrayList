package allArrayList.add;

//Умова 1 Різні рядки в списку
//1. Створити список рядка.
//2. Додати в нього 5 різних рядків
//3. Вивести його на екран
//4. Використати цикл, та
//        вивести вміст на екран,
//        кожне значення з нового рядка.
//------------------------------------------
//Умова 2 Найдовший рядок

//1.Створити список рядків
//2.Зчитати з клавіатури 5 рядків
//        та додати в список
//3.Використовуючи цикл,знайти найдовший
//        рядок у списку
//4.Вивести знайдений рядок на екран
//5.Якщо таких рядків декілька,
//        вивести кожну з нового рядка
//---------------------------------------------


//public class Main {
//Умова 1 Різні рядки в списку
//1. Створити список рядка.
//2. Додати в нього 5 різних рядків
//3. Вивести його на екран
//4. Використати цикл, та
//        вивести вміст на екран,
//        кожне значення з нового рядка.
//------------------------------------------
////    throws IOException - буде працювати замість try/catch
//    public static void main(String[]args) throws IOException {
////// Буфферизація потоків BufferedReader - знижуємо загальну
////// кількість звернень до фізичного носія для запису або читання данних
//////        В параметер передаємо потік вхід-вихід,забезпечуємо ефективне читання
//////        символів із потоку символів.
//////    InputStreamReader - мост від потоків байтів до потоків символів
////        BufferedReader reader =
////                new BufferedReader(new InputStreamReader(System.in));
////        ArrayList<String> list = new ArrayList<>();
////        for (int i = 0; i < 5; i++) {
//////            Метод readLine() класу BufferedReader
//////            використовується для читання тексту по
//////            одному рядку. Кінець рядка слід розуміти
//////            як '\n', '\r' або EOF.
////            String s = reader.readLine();
////            list.add(s);
////        }
////        System.out.println(list.size());
////        for (int i = 0; i < list.size(); i++) {
////            System.out.println(list.get(i));
////        }
//    }
////    --------------------------------------------------------------------
//}
